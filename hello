import math

def mod_inverse(e, phi):
    for d in range(3, phi):
        if (d * e) % phi == 1:
            return d
    raise ValueError("Modular inverse does not exist!")

p = int(input("Enter First co-prime number: "))
q = int(input("Enter Second co-prime number: "))
n = p * q
z = (p - 1) * (q - 1)
e = 2
while e < z:
    if math.gcd(e, z) == 1:
        break
    else:
        e += 1

d = mod_inverse(e, z)

print("Public key is", e, n)
print("Private key is", d, n)

m = int(input("Enter message: "))
c = pow(m, e, n)
print("Encrypted message is", c)

m = pow(c, d, n)
print("Decrypted message is", m)
